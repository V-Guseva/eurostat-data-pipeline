x-volume-common:
  &volume-common
  driver: local
  driver_opts:
    &volume-driver-opts-common
    type: none
    o: bind
  environments:
    PROJ_DIR=$HOME/Volumes
    MINIO_ROOT_USER=<your-minio-admin>
    MINIO_ROOT_PASSWORD=<your-minio-password>
    MINIO_DEFAULT_BUCKETS=<your-minio-bucket>

services:
  minio:
    image: ${MINIO_IMAGE_NAME:-bitnami/minio:2024}
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:?error}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:?error}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS:-null}
    volumes:
      - minio-volume:/bitnami/minio/data
    healthcheck:
      test: ["CMD", "mc", "-ready", "local"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 20s
    restart: on-failure:3
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"

volumes:
  minio-volume:
    <<: *volume-common
    driver_opts:
      <<: *volume-driver-opts-common
      device: ${PROJ_DIR:-.}/minio-data

deploy:
  image:
    name: minio/mc
    entrypoint: ['']
  stage: deploy
  before_script:
    - mc alias set minio $MINIO_HOST $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
  script:
    - mc cp <source> <destination>
